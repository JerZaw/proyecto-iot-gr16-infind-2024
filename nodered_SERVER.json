[
    {
        "id": "d1ca688cf58850b4",
        "type": "tab",
        "label": "Proyecto",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0b99bf02f6b0844e",
        "type": "group",
        "z": "d1ca688cf58850b4",
        "name": "LED",
        "style": {
            "fill": "#c8e7a7",
            "fill-opacity": "0.2",
            "label": true
        },
        "nodes": [
            "31d42c7bbfce9591",
            "c661b03f42e73e98"
        ],
        "x": 8,
        "y": 333,
        "w": 1484,
        "h": 314
    },
    {
        "id": "a6e10a28a6b33eab",
        "type": "group",
        "z": "d1ca688cf58850b4",
        "name": "Datos",
        "style": {
            "fill": "#b797cf",
            "fill-opacity": "0.2",
            "label": true
        },
        "nodes": [
            "9e5f1daac8817834",
            "da04a85ff95ef20b",
            "3c55fdcabf57bf38",
            "de01d578f2f44325",
            "e180ee3ab9fc8d45",
            "70287df0443d53f0",
            "cbb2980dec7aa246",
            "db7b586b1bd692b7",
            "2ee5a136a4bd3d87",
            "a9caa3b99c52e7d0",
            "317aa8d253f9a2c5",
            "8823727e52a5d210",
            "af9befb1ad79961c"
        ],
        "x": 14,
        "y": 659,
        "w": 732,
        "h": 302
    },
    {
        "id": "bd833be383cd4eee",
        "type": "group",
        "z": "d1ca688cf58850b4",
        "name": "Switch",
        "style": {
            "stroke": "#a4a4a4",
            "label": true,
            "fill": "#bfdbef",
            "fill-opacity": "0.3"
        },
        "nodes": [
            "2ecd1bbbb83a6020",
            "c28a36b5c0f57a9f",
            "25d77a8a4fc66d4c",
            "ab8ddecb7ce67b86",
            "714da74a6d10524a",
            "5d57301ddb619f5a",
            "8847f0696f2f0422",
            "1aa5e38bfa6fc8f8"
        ],
        "x": 934,
        "y": 979,
        "w": 552,
        "h": 242
    },
    {
        "id": "0561048ff19302eb",
        "type": "group",
        "z": "d1ca688cf58850b4",
        "name": "Conexión",
        "style": {
            "fill": "#dbcbe7",
            "label": true,
            "fill-opacity": "0.49"
        },
        "nodes": [
            "c19e0f0eabfa8391",
            "8c015fc53519c741",
            "3f37ee6a21a7ecb9",
            "c8216693126ebc7a",
            "5b74029ad1dbe3f9",
            "58bd9083c0bf4a20",
            "d71e77cce92fb3fe"
        ],
        "x": 14,
        "y": 119,
        "w": 632,
        "h": 202
    },
    {
        "id": "8ad73ad08aeca1a7",
        "type": "group",
        "z": "d1ca688cf58850b4",
        "name": "LOG",
        "style": {
            "label": true,
            "stroke": "#a4a4a4",
            "fill": "#ff0000",
            "fill-opacity": "0.2"
        },
        "nodes": [
            "8554eb52c2e9a99c",
            "96a426cfbfb0fba4",
            "c5e6ad3cdae36552",
            "05f27ef6d3d12291",
            "e1882296b87be27b",
            "f36c3800ecb041a3",
            "662761b652ab1d70",
            "71b0b66aec5eeb23"
        ],
        "x": 654,
        "y": 119,
        "w": 832,
        "h": 202
    },
    {
        "id": "7a2c2e4330a7a77a",
        "type": "group",
        "z": "d1ca688cf58850b4",
        "name": "Configuración",
        "style": {
            "fill": "#ffffbf",
            "fill-opacity": "0.2",
            "label": true
        },
        "nodes": [
            "4f7e94edd657c821",
            "84fdd3222dfae083",
            "1bf13674a5deafa2",
            "1e8d10c771f483ec",
            "fe6d4e71dc4fc136",
            "d6c000c39ba6a37d",
            "b20b5669c923d740",
            "46d79c770ed5dc12",
            "2c6b03a8aae336a2",
            "3ea6bf1e0fd46b4e",
            "1ddb6e485a502963",
            "6eb8199d7d256d9f",
            "5c99e88bdd6cc06e",
            "0f643b56afcb1219"
        ],
        "x": 14,
        "y": 979,
        "w": 912,
        "h": 242
    },
    {
        "id": "79813c37677002c7",
        "type": "group",
        "z": "d1ca688cf58850b4",
        "name": "Telegram",
        "style": {
            "fill": "#0070c0",
            "fill-opacity": "0.2",
            "label": true
        },
        "nodes": [
            "4b867ab522b2d670",
            "4953addc43e0b8fc",
            "d2a2b692abfdea21",
            "2ca1df47a53fc668",
            "13e1bd8ceb772bd4",
            "8d5eac6466b3dda3",
            "96f9a74eeff676b3",
            "321c9d3546d27168",
            "a6a1e3d1b326d211",
            "9778ef0b9aef8df6",
            "9647b42c7747add6",
            "2b910d102213c249",
            "947b251e14b7b21b",
            "620acf66b36e891d",
            "20c066a7531a84aa",
            "eb393fa880ee4792",
            "6798e22ab60c9090"
        ],
        "x": 754,
        "y": 659,
        "w": 732,
        "h": 302
    },
    {
        "id": "333d5cf6dff47170",
        "type": "group",
        "z": "d1ca688cf58850b4",
        "name": "Datos",
        "style": {
            "fill": "#b797cf",
            "fill-opacity": "0.2",
            "label": true
        },
        "nodes": [
            "edc0632617ade02f",
            "754b62bb14ef92f1",
            "aa27343560ef30d7",
            "f1aaa76d45a7a187",
            "c61730b819d35ede",
            "8b03e761f5b38371",
            "2a2f94091c907974",
            "8e70bfae5323f5b4",
            "766d86601a0d0bf9",
            "d5fd734599796120",
            "0cc03fd24f9118f0",
            "d77afbf155fbf69d",
            "57e81b2b0809183a",
            "99b6073ac237990b",
            "6cfb388fa7edc74f",
            "80810b208c0a8a6c"
        ],
        "x": 14,
        "y": 1239,
        "w": 1458,
        "h": 328
    },
    {
        "id": "31d42c7bbfce9591",
        "type": "group",
        "z": "d1ca688cf58850b4",
        "g": "0b99bf02f6b0844e",
        "name": "Color",
        "style": {
            "label": true
        },
        "nodes": [
            "ee1c9be0b0c7ad45",
            "f4ece607916b5bbd",
            "1e9c255194e8d9e0",
            "414ab21e13e6dc27",
            "38c0c46c2fc66c87",
            "8157ca8d64a8d8e2",
            "ee0bad6910868663",
            "91f62fb0e006dad1",
            "7aadf6265821c858",
            "aaa428ea3e768337"
        ],
        "x": 34,
        "y": 359,
        "w": 652,
        "h": 262
    },
    {
        "id": "c661b03f42e73e98",
        "type": "group",
        "z": "d1ca688cf58850b4",
        "g": "0b99bf02f6b0844e",
        "name": "Brillo",
        "style": {
            "label": true
        },
        "nodes": [
            "9a9142bae18b905d",
            "449ffee70916169b",
            "733466ebbda8cb2e",
            "6168a86c0c2789cd",
            "090dc87af86862df",
            "475e3314394f7ac1",
            "d96316901a3e757d",
            "4a7e299833c1d28b",
            "76c044d54d165bba",
            "eeaeba3de37051ac",
            "5193f305b1eb5c69",
            "fc281e09824d65c3"
        ],
        "x": 734,
        "y": 359,
        "w": 732,
        "h": 262
    },
    {
        "id": "6cfb388fa7edc74f",
        "type": "group",
        "z": "d1ca688cf58850b4",
        "g": "333d5cf6dff47170",
        "name": "Borrar todos los datos",
        "style": {
            "label": true
        },
        "nodes": [
            "a7cbe833abb5f6b5",
            "f14f3993210df281"
        ],
        "x": 874,
        "y": 1459,
        "w": 572,
        "h": 82
    },
    {
        "id": "80810b208c0a8a6c",
        "type": "group",
        "z": "d1ca688cf58850b4",
        "g": "333d5cf6dff47170",
        "name": "Ver todos los datos",
        "style": {
            "label": true
        },
        "nodes": [
            "740f33c7add8fa47",
            "349e6585a8f096ef",
            "6b776a0d23432fd0"
        ],
        "x": 94,
        "y": 1459,
        "w": 732,
        "h": 82
    },
    {
        "id": "f344e6ca8046d041",
        "type": "group",
        "z": "d1ca688cf58850b4",
        "name": "Descarga CSV",
        "style": {
            "fill": "#c8e7a7",
            "fill-opacity": "0.3",
            "label": true
        },
        "nodes": [
            "a14b4ad69ce264a1",
            "15754261d416c520"
        ],
        "x": 8,
        "y": 1593,
        "w": 1464,
        "h": 494
    },
    {
        "id": "a14b4ad69ce264a1",
        "type": "group",
        "z": "d1ca688cf58850b4",
        "g": "f344e6ca8046d041",
        "name": "Datos Sensor",
        "style": {
            "label": true
        },
        "nodes": [
            "931f64ad4963c5bd",
            "7320317624b83896",
            "11e8582dc7c066da",
            "ed837ed14a4a351b",
            "a34cba8a2d0ebc7b",
            "71c782a16ccd4ed6",
            "70eac1fd53d50c90",
            "efe187885417bcb5",
            "329eaff4ef73e44c",
            "52307084da199889",
            "bc42d73a9adcbaf5",
            "d1f0798365882ce4",
            "19fea77950728ae9",
            "2a0401cf044ff0a6"
        ],
        "x": 34,
        "y": 1799,
        "w": 1412,
        "h": 262
    },
    {
        "id": "15754261d416c520",
        "type": "group",
        "z": "d1ca688cf58850b4",
        "g": "f344e6ca8046d041",
        "name": "LOG",
        "style": {
            "label": true
        },
        "nodes": [
            "10cd2ebb87e92530",
            "2c8664ea9aaec88c",
            "1d5c25664fbfbd57",
            "119f9b6574837a75",
            "43d100ec9bd94a1e",
            "3ea4f1f0fc0bdab2",
            "c9bd5979de07efa0",
            "57151b866d8f97b2"
        ],
        "x": 34,
        "y": 1619,
        "w": 1412,
        "h": 162
    },
    {
        "id": "9a9142bae18b905d",
        "type": "mqtt in",
        "z": "d1ca688cf58850b4",
        "g": "c661b03f42e73e98",
        "name": "LED Brillo Pub",
        "topic": "II16/esp32c3-000110/led/brillo/estado",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "dcc291bb801e1410",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 840,
        "y": 400,
        "wires": [
            [
                "733466ebbda8cb2e",
                "6168a86c0c2789cd"
            ]
        ]
    },
    {
        "id": "ee1c9be0b0c7ad45",
        "type": "mqtt in",
        "z": "d1ca688cf58850b4",
        "g": "31d42c7bbfce9591",
        "name": "LED Color Pub",
        "topic": "II16/esp32c3-000110/led/color/estado",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "dcc291bb801e1410",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 400,
        "wires": [
            [
                "1e9c255194e8d9e0",
                "38c0c46c2fc66c87"
            ]
        ]
    },
    {
        "id": "449ffee70916169b",
        "type": "mqtt out",
        "z": "d1ca688cf58850b4",
        "g": "c661b03f42e73e98",
        "name": "LED Brillo Sub",
        "topic": "II16/esp32c3-000110/led/brillo",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dcc291bb801e1410",
        "x": 1300,
        "y": 520,
        "wires": []
    },
    {
        "id": "f4ece607916b5bbd",
        "type": "mqtt out",
        "z": "d1ca688cf58850b4",
        "g": "31d42c7bbfce9591",
        "name": "LED Color Sub",
        "topic": "II16/esp32c3-000110/led/color",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dcc291bb801e1410",
        "x": 580,
        "y": 580,
        "wires": []
    },
    {
        "id": "c19e0f0eabfa8391",
        "type": "mqtt in",
        "z": "d1ca688cf58850b4",
        "g": "0561048ff19302eb",
        "name": "Conexion",
        "topic": "II16/esp32c3-000110/conexion",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "dcc291bb801e1410",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 200,
        "wires": [
            [
                "8c015fc53519c741",
                "58bd9083c0bf4a20",
                "d71e77cce92fb3fe",
                "3f37ee6a21a7ecb9"
            ]
        ]
    },
    {
        "id": "8c015fc53519c741",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "g": "0561048ff19302eb",
        "name": "Conexion",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 160,
        "wires": []
    },
    {
        "id": "733466ebbda8cb2e",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "g": "c661b03f42e73e98",
        "name": "LED Brillo",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 400,
        "wires": []
    },
    {
        "id": "1e9c255194e8d9e0",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "g": "31d42c7bbfce9591",
        "name": "LED Color",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 400,
        "wires": []
    },
    {
        "id": "414ab21e13e6dc27",
        "type": "ui_led",
        "z": "d1ca688cf58850b4",
        "g": "31d42c7bbfce9591",
        "order": 3,
        "group": "9e8a9cec0b15cf59",
        "width": 0,
        "height": 0,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "{ \"level\":0 }",
                "valueType": "json"
            },
            {
                "color": "#ffffff",
                "value": "{ \"level\":1 }",
                "valueType": "json"
            }
        ],
        "allowColorForValueInMessage": true,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 570,
        "y": 460,
        "wires": []
    },
    {
        "id": "38c0c46c2fc66c87",
        "type": "function",
        "z": "d1ca688cf58850b4",
        "g": "31d42c7bbfce9591",
        "name": "RGB2Hex",
        "func": "function decimalToHex(d) {\n    var hex = d.toString(16);\n    if (hex.length == 1) hex = \"0\" + hex;\n    return hex;\n}\n\n\nlet isLedOn = flow.get(\"level\");\n\n\nif (isLedOn){\n    if (msg.payload.R != null) {\n        var colorHEX = \"#\" + decimalToHex(msg.payload.R)\n            + decimalToHex(msg.payload.G)\n            + decimalToHex(msg.payload.B);\n    }\n    else if (msg.payload.level != null) {\n        var colorHEX = \"#\" + decimalToHex(flow.get(\"R\") * msg.payload.level)\n            + decimalToHex(flow.get(\"G\") * msg.payload.level)\n            + decimalToHex(flow.get(\"B\") * msg.payload.level);\n    }\n}\nelse{\n    var colorHEX = \"#\" + decimalToHex(0)\n        + decimalToHex(0)\n        + decimalToHex(0);\n}\n\nmsg.colorForValue = {};\nmsg.colorForValue[\"micolor\"] = colorHEX;\nmsg.payload = \"micolor\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 460,
        "wires": [
            [
                "414ab21e13e6dc27",
                "91f62fb0e006dad1"
            ]
        ]
    },
    {
        "id": "8157ca8d64a8d8e2",
        "type": "inject",
        "z": "d1ca688cf58850b4",
        "g": "31d42c7bbfce9591",
        "name": "Color de LED",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"CHIPID\":\"esp32c3-D9D878\",\"R\":0,\"G\":0,\"B\":255}",
        "payloadType": "json",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "38c0c46c2fc66c87",
                "1e9c255194e8d9e0"
            ]
        ]
    },
    {
        "id": "6168a86c0c2789cd",
        "type": "function",
        "z": "d1ca688cf58850b4",
        "g": "c661b03f42e73e98",
        "name": "Recibo Brillo",
        "func": "// Parseamos el payload recibido\nlet payload = msg.payload;\n\ntry {\n    // Aseguramos que el payload es un objeto\n    if (typeof payload === 'string') {\n        payload = JSON.parse(payload);\n    }\n\n    // Extraemos los valores\n    let chipId = payload.CHIPID || \"Desconocido\";\n    let brillo = payload.LED !== undefined ? payload.LED : \"No especificado\";\n    let origen = payload.origen || \"No especificado\";\n    let id = payload.id ? ` con ID: ${payload.id}` : \"\";\n\n    // Creamos el mensaje de salida\n    let texto = `El brillo actual del LED es ${brillo} y el comando proviene de ${origen}${id}. (CHIPID: ${chipId})`;\n\n    // Pasamos el mensaje generado como nuevo payload\n    msg.payload = texto;\n\n    return msg;\n} catch (err) {\n    node.error(\"Error al procesar el mensaje: \" + err.message);\n    return null;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 460,
        "wires": [
            [
                "475e3314394f7ac1",
                "d96316901a3e757d"
            ]
        ]
    },
    {
        "id": "090dc87af86862df",
        "type": "inject",
        "z": "d1ca688cf58850b4",
        "g": "c661b03f42e73e98",
        "name": "Brillo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"CHIPID\":\"esp32c3-XXXX\", \"LED\":100, \"origen\":\"mqtt\", \"id\":\"123456789\"}",
        "payloadType": "json",
        "x": 870,
        "y": 460,
        "wires": [
            [
                "6168a86c0c2789cd"
            ]
        ]
    },
    {
        "id": "475e3314394f7ac1",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "g": "c661b03f42e73e98",
        "name": "LED Brillo Origen",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 400,
        "wires": []
    },
    {
        "id": "d96316901a3e757d",
        "type": "ui_text",
        "z": "d1ca688cf58850b4",
        "g": "c661b03f42e73e98",
        "group": "9e8a9cec0b15cf59",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Brillo LED",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1280,
        "y": 460,
        "wires": []
    },
    {
        "id": "ee0bad6910868663",
        "type": "ui_colour_picker",
        "z": "d1ca688cf58850b4",
        "g": "31d42c7bbfce9591",
        "name": "",
        "label": "Elige Color",
        "group": "9e8a9cec0b15cf59",
        "format": "hex",
        "outformat": "string",
        "showSwatch": true,
        "showPicker": false,
        "showValue": false,
        "showHue": false,
        "showAlpha": false,
        "showLightness": true,
        "square": "false",
        "dynOutput": "false",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 150,
        "y": 580,
        "wires": [
            [
                "7aadf6265821c858"
            ]
        ]
    },
    {
        "id": "4a7e299833c1d28b",
        "type": "ui_slider",
        "z": "d1ca688cf58850b4",
        "g": "c661b03f42e73e98",
        "name": "",
        "label": "% Brillo",
        "tooltip": "",
        "group": "9e8a9cec0b15cf59",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 920,
        "y": 520,
        "wires": [
            [
                "fc281e09824d65c3"
            ]
        ]
    },
    {
        "id": "76c044d54d165bba",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "g": "c661b03f42e73e98",
        "name": "Comando LED Brillo",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 580,
        "wires": []
    },
    {
        "id": "da04a85ff95ef20b",
        "type": "mqtt in",
        "z": "d1ca688cf58850b4",
        "g": "a6e10a28a6b33eab",
        "name": "Datos",
        "topic": "II16/esp32c3-000110/datos",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "dcc291bb801e1410",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 740,
        "wires": [
            [
                "8823727e52a5d210",
                "af9befb1ad79961c"
            ]
        ]
    },
    {
        "id": "3c55fdcabf57bf38",
        "type": "change",
        "z": "d1ca688cf58850b4",
        "g": "a6e10a28a6b33eab",
        "name": "Temperatura",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.DHT11.temp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Temperatura",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 760,
        "wires": [
            [
                "e180ee3ab9fc8d45",
                "cbb2980dec7aa246"
            ]
        ]
    },
    {
        "id": "de01d578f2f44325",
        "type": "inject",
        "z": "d1ca688cf58850b4",
        "g": "a6e10a28a6b33eab",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ \"CHIPID\":\"esp32c3-XXXX\", \"Uptime\":12300, \"DHT11\":{\"temp\":26.0,\"hum\":37.0}, \"Wifi\":{\"SSId\":\"infind\",\"IP\":\"192.168.0.100\",\"RSSI\":-56} }",
        "payloadType": "json",
        "x": 110,
        "y": 840,
        "wires": [
            [
                "8823727e52a5d210"
            ]
        ]
    },
    {
        "id": "9e5f1daac8817834",
        "type": "change",
        "z": "d1ca688cf58850b4",
        "g": "a6e10a28a6b33eab",
        "name": "Humedad",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.DHT11.hum",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Humedad",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 720,
        "wires": [
            [
                "70287df0443d53f0",
                "cbb2980dec7aa246"
            ]
        ]
    },
    {
        "id": "e180ee3ab9fc8d45",
        "type": "ui_widget_thermometer",
        "z": "d1ca688cf58850b4",
        "g": "a6e10a28a6b33eab",
        "group": "9cb3afe23639a28c",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Termometro",
        "title": "Temperatura",
        "numColor": 3,
        "colorTop": "#2196f3",
        "colorMiddle": "#e2e55d",
        "colorBottom": "#f44336",
        "unit": "°C",
        "scale": "normal",
        "minTemp": "-10",
        "maxTemp": "60",
        "minTempMoreThanMaxTemp": "1",
        "numberOfDecimals": "0",
        "showPercentage": "0",
        "x": 650,
        "y": 780,
        "wires": []
    },
    {
        "id": "70287df0443d53f0",
        "type": "ui_gauge",
        "z": "d1ca688cf58850b4",
        "g": "a6e10a28a6b33eab",
        "name": "",
        "group": "9cb3afe23639a28c",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humedad",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#c3e9f9",
            "#00e6cb",
            "#141ae1"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 660,
        "y": 700,
        "wires": []
    },
    {
        "id": "cbb2980dec7aa246",
        "type": "ui_chart",
        "z": "d1ca688cf58850b4",
        "g": "a6e10a28a6b33eab",
        "name": "",
        "group": "9cb3afe23639a28c",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 650,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "db7b586b1bd692b7",
        "type": "ui_text",
        "z": "d1ca688cf58850b4",
        "g": "a6e10a28a6b33eab",
        "group": "be165c6094b73de4",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "SSId:",
        "format": "{{payload.Wifi.SSId}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 470,
        "y": 840,
        "wires": []
    },
    {
        "id": "2ee5a136a4bd3d87",
        "type": "ui_text",
        "z": "d1ca688cf58850b4",
        "g": "a6e10a28a6b33eab",
        "group": "be165c6094b73de4",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "IP:",
        "format": "{{payload.Wifi.IP}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 470,
        "y": 880,
        "wires": []
    },
    {
        "id": "a9caa3b99c52e7d0",
        "type": "ui_text",
        "z": "d1ca688cf58850b4",
        "g": "a6e10a28a6b33eab",
        "group": "be165c6094b73de4",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "RSSI:",
        "format": "{{payload.Wifi.RSSI}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 470,
        "y": 920,
        "wires": []
    },
    {
        "id": "317aa8d253f9a2c5",
        "type": "ui_text",
        "z": "d1ca688cf58850b4",
        "g": "a6e10a28a6b33eab",
        "group": "be165c6094b73de4",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Uptime:",
        "format": "{{payload.Uptime}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 480,
        "y": 800,
        "wires": []
    },
    {
        "id": "8823727e52a5d210",
        "type": "function",
        "z": "d1ca688cf58850b4",
        "g": "a6e10a28a6b33eab",
        "name": "Mas bonito",
        "func": "msg.payload=msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 800,
        "wires": [
            [
                "a9caa3b99c52e7d0",
                "2ee5a136a4bd3d87",
                "db7b586b1bd692b7",
                "3c55fdcabf57bf38",
                "9e5f1daac8817834",
                "317aa8d253f9a2c5"
            ]
        ]
    },
    {
        "id": "2ecd1bbbb83a6020",
        "type": "mqtt out",
        "z": "d1ca688cf58850b4",
        "g": "bd833be383cd4eee",
        "name": "Switch Sub",
        "topic": "II16/esp32c3-000110/switch/cmd",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dcc291bb801e1410",
        "x": 1390,
        "y": 1180,
        "wires": []
    },
    {
        "id": "c28a36b5c0f57a9f",
        "type": "mqtt in",
        "z": "d1ca688cf58850b4",
        "g": "bd833be383cd4eee",
        "name": "Switch Pub",
        "topic": "II16/esp32c3-000110/switch/status",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "dcc291bb801e1410",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1020,
        "y": 1040,
        "wires": [
            [
                "714da74a6d10524a",
                "5d57301ddb619f5a"
            ]
        ]
    },
    {
        "id": "4f7e94edd657c821",
        "type": "mqtt out",
        "z": "d1ca688cf58850b4",
        "g": "7a2c2e4330a7a77a",
        "name": "FOTA",
        "topic": "II16/esp32c3-000110/FOTA",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dcc291bb801e1410",
        "x": 410,
        "y": 1180,
        "wires": []
    },
    {
        "id": "84fdd3222dfae083",
        "type": "mqtt out",
        "z": "d1ca688cf58850b4",
        "g": "7a2c2e4330a7a77a",
        "name": "Config",
        "topic": "II16/esp32c3-000110/config",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dcc291bb801e1410",
        "x": 810,
        "y": 1080,
        "wires": []
    },
    {
        "id": "25d77a8a4fc66d4c",
        "type": "ui_switch",
        "z": "d1ca688cf58850b4",
        "g": "bd833be383cd4eee",
        "name": "",
        "label": "Switch",
        "tooltip": "",
        "group": "9e8a9cec0b15cf59",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "{ \"level\":1 }",
        "onvalueType": "json",
        "onicon": "",
        "oncolor": "",
        "offvalue": "{ \"level\":0 }",
        "offvalueType": "json",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1230,
        "y": 1180,
        "wires": [
            [
                "2ecd1bbbb83a6020"
            ]
        ]
    },
    {
        "id": "91f62fb0e006dad1",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "g": "31d42c7bbfce9591",
        "name": "LED Hex",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 500,
        "wires": []
    },
    {
        "id": "ab8ddecb7ce67b86",
        "type": "link in",
        "z": "d1ca688cf58850b4",
        "g": "bd833be383cd4eee",
        "name": "Hacia el LED",
        "links": [
            "13e1bd8ceb772bd4"
        ],
        "x": 1295,
        "y": 1140,
        "wires": [
            [
                "2ecd1bbbb83a6020"
            ]
        ]
    },
    {
        "id": "af9befb1ad79961c",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "g": "a6e10a28a6b33eab",
        "name": "Datos",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 740,
        "wires": []
    },
    {
        "id": "eeaeba3de37051ac",
        "type": "link in",
        "z": "d1ca688cf58850b4",
        "g": "c661b03f42e73e98",
        "name": "Brillo hacia el LED",
        "links": [
            "321c9d3546d27168"
        ],
        "x": 795,
        "y": 520,
        "wires": [
            [
                "4a7e299833c1d28b"
            ]
        ]
    },
    {
        "id": "5193f305b1eb5c69",
        "type": "inject",
        "z": "d1ca688cf58850b4",
        "g": "c661b03f42e73e98",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "25",
        "payloadType": "num",
        "x": 830,
        "y": 580,
        "wires": [
            [
                "4a7e299833c1d28b"
            ]
        ]
    },
    {
        "id": "714da74a6d10524a",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "g": "bd833be383cd4eee",
        "name": "LED Switch",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 1020,
        "wires": []
    },
    {
        "id": "5d57301ddb619f5a",
        "type": "change",
        "z": "d1ca688cf58850b4",
        "g": "bd833be383cd4eee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.level",
                "pt": "msg",
                "to": "payload.SWITCH",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload.SWITCH",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.CHIPID",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1180,
        "wires": [
            [
                "25d77a8a4fc66d4c",
                "1aa5e38bfa6fc8f8"
            ]
        ]
    },
    {
        "id": "3f37ee6a21a7ecb9",
        "type": "ui_text",
        "z": "d1ca688cf58850b4",
        "g": "0561048ff19302eb",
        "group": "be165c6094b73de4",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "CHIPID",
        "format": "{{msg.payload.CHIPID}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 560,
        "y": 200,
        "wires": []
    },
    {
        "id": "c8216693126ebc7a",
        "type": "ui_text",
        "z": "d1ca688cf58850b4",
        "g": "0561048ff19302eb",
        "group": "be165c6094b73de4",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Estado",
        "format": "{{payload.status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 560,
        "y": 240,
        "wires": []
    },
    {
        "id": "5b74029ad1dbe3f9",
        "type": "ui_text",
        "z": "d1ca688cf58850b4",
        "g": "0561048ff19302eb",
        "group": "be165c6094b73de4",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Actualizado:",
        "format": "{{msg.dateTime}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 550,
        "y": 280,
        "wires": []
    },
    {
        "id": "58bd9083c0bf4a20",
        "type": "function",
        "z": "d1ca688cf58850b4",
        "g": "0561048ff19302eb",
        "name": "DateTime",
        "func": "var currentDate = new Date();\n\nconst currDate = currentDate.getDate() + \"/\"\n    + (currentDate.getMonth() + 1) + \"/\"\n    + currentDate.getFullYear();\n\nvar tempH;\nvar tempM;\nvar tempS;\n\nif (currentDate.getSeconds() >= 10)\n{\n    tempS = currentDate.getSeconds();\n    }\nelse\n{\n    tempS = \"0\" + currentDate.getSeconds();\n}\n\nif (currentDate.getMinutes() >= 10)\n{\n    tempM = currentDate.getMinutes();\n    }\nelse\n{\n    tempM = \"0\" + currentDate.getMinutes();\n}\n\nif (currentDate.getHours() >= 10)\n{\n    tempH = currentDate.getHours();\n    }\nelse\n{\n    tempH = \"0\" + currentDate.getHours();\n}\n\n\nconst currTime = tempH + \":\"\n    + tempM + \":\"\n    + tempS;\n\nmsg.date = currDate;\nmsg.time = currTime;\nmsg.dateTime = currDate + \"  \" + currTime;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 280,
        "wires": [
            [
                "5b74029ad1dbe3f9"
            ]
        ]
    },
    {
        "id": "d71e77cce92fb3fe",
        "type": "function",
        "z": "d1ca688cf58850b4",
        "g": "0561048ff19302eb",
        "name": "online status",
        "func": "if (msg.payload.online == \"true\")\n{\n    msg.payload.status = \"conectado\"\n}\nelse\n{\n    msg.payload.status = \"desconectado\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 240,
        "wires": [
            [
                "c8216693126ebc7a"
            ]
        ]
    },
    {
        "id": "7aadf6265821c858",
        "type": "function",
        "z": "d1ca688cf58850b4",
        "g": "31d42c7bbfce9591",
        "name": "save Color data",
        "func": "let hexColor = msg.payload;\n\nlet r = parseInt(hexColor.substring(0, 2), 16);\nlet g = parseInt(hexColor.substring(2, 4), 16);\nlet b = parseInt(hexColor.substring(4, 6), 16);\n\nflow.set(\"R\", r);\nflow.set(\"G\", g);\nflow.set(\"B\", b);\n\n// read rgb values\nmsg.payload = {\n    \"R\": flow.get(\"R\"),\n    \"G\": flow.get(\"G\"),\n    \"B\": flow.get(\"B\")\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 580,
        "wires": [
            [
                "f4ece607916b5bbd"
            ]
        ]
    },
    {
        "id": "8847f0696f2f0422",
        "type": "link out",
        "z": "d1ca688cf58850b4",
        "g": "bd833be383cd4eee",
        "name": "switch message",
        "mode": "link",
        "links": [
            "aaa428ea3e768337"
        ],
        "x": 1365,
        "y": 1100,
        "wires": []
    },
    {
        "id": "aaa428ea3e768337",
        "type": "link in",
        "z": "d1ca688cf58850b4",
        "g": "31d42c7bbfce9591",
        "name": "link in 1",
        "links": [
            "8847f0696f2f0422"
        ],
        "x": 225,
        "y": 500,
        "wires": [
            [
                "38c0c46c2fc66c87"
            ]
        ]
    },
    {
        "id": "edc0632617ade02f",
        "type": "function",
        "z": "d1ca688cf58850b4",
        "g": "333d5cf6dff47170",
        "name": "+ fecha",
        "func": "msg.payload.date = new Date();\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1280,
        "wires": [
            [
                "754b62bb14ef92f1"
            ]
        ]
    },
    {
        "id": "754b62bb14ef92f1",
        "type": "mongodb out",
        "z": "d1ca688cf58850b4",
        "g": "333d5cf6dff47170",
        "mongodb": "ef32da8a5b070e31",
        "name": "",
        "collection": "datos_json",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 570,
        "y": 1280,
        "wires": []
    },
    {
        "id": "aa27343560ef30d7",
        "type": "mqtt in",
        "z": "d1ca688cf58850b4",
        "g": "333d5cf6dff47170",
        "name": "Datos",
        "topic": "II16/esp32c3-000110/datos",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "dcc291bb801e1410",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 1320,
        "wires": [
            [
                "edc0632617ade02f",
                "f1aaa76d45a7a187"
            ]
        ]
    },
    {
        "id": "f1aaa76d45a7a187",
        "type": "function",
        "z": "d1ca688cf58850b4",
        "g": "333d5cf6dff47170",
        "name": "function 8",
        "func": "msg.sort = {\"date\":-1};\nmsg.limit = flow.get(\"num_datos\");\nmsg.payload = {\"DHT11.temp\":{\"$gte\":flow.get(\"Tcorte\")}}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1320,
        "wires": [
            [
                "c61730b819d35ede",
                "8b03e761f5b38371"
            ]
        ]
    },
    {
        "id": "c61730b819d35ede",
        "type": "mongodb in",
        "z": "d1ca688cf58850b4",
        "g": "333d5cf6dff47170",
        "mongodb": "ef32da8a5b070e31",
        "name": "",
        "collection": "datos_json",
        "operation": "find",
        "x": 890,
        "y": 1320,
        "wires": [
            [
                "766d86601a0d0bf9",
                "8e70bfae5323f5b4",
                "d5fd734599796120"
            ]
        ]
    },
    {
        "id": "8b03e761f5b38371",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "g": "333d5cf6dff47170",
        "name": "debug 79",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 1380,
        "wires": []
    },
    {
        "id": "2a2f94091c907974",
        "type": "ui_chart",
        "z": "d1ca688cf58850b4",
        "g": "333d5cf6dff47170",
        "name": "",
        "group": "b5a6df43101c1b3d",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1390,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "8e70bfae5323f5b4",
        "type": "function",
        "z": "d1ca688cf58850b4",
        "g": "333d5cf6dff47170",
        "name": "genera datos gráfica",
        "func": "var arraytemp=[];\nvar arrayhum=[];\n\n// los arrays usados en la represenstación gráfica deben contener objetos JSON con dos campos: {x , y}\n// en x debemos poner la hora en formato \"timestamp\". Si tenemos un objeto fecha se puede convertir usando el método getTime()\n// en y debemos poner el valor de la variable\n// mas info en: https://github.com/node-red/node-red-dashboard/blob/master/Charts.md\n\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n{\n    for (var i = 0; i < msg.payload.length; i++) { // añade datos a los arrays\n        arraytemp.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].DHT11.temp});\n        arrayhum.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].DHT11.hum});\n    }\n\n    msg.payload = [{\n        \"series\": [\"Temperatura\", \"Humedad\"],\n        \"data\": [arraytemp, arrayhum],\n        \"labels\": [\"\"]\n    }];\n}\nelse  // si no hay registros borra la gráfica anterior\nmsg.payload = [];\n\n\nreturn msg; \n    \n ",
        "outputs": "1",
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1360,
        "wires": [
            [
                "2a2f94091c907974"
            ]
        ]
    },
    {
        "id": "766d86601a0d0bf9",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "g": "333d5cf6dff47170",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1170,
        "y": 1280,
        "wires": []
    },
    {
        "id": "d5fd734599796120",
        "type": "ui_table",
        "z": "d1ca688cf58850b4",
        "g": "333d5cf6dff47170",
        "group": "b5a6df43101c1b3d",
        "name": "",
        "order": 4,
        "width": 6,
        "height": 10,
        "columns": [
            {
                "field": "date",
                "title": "Fecha",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "DHT11.temp",
                "title": "Temperatura",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "DHT11.hum",
                "title": "Humedad",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1150,
        "y": 1320,
        "wires": []
    },
    {
        "id": "0cc03fd24f9118f0",
        "type": "ui_slider",
        "z": "d1ca688cf58850b4",
        "g": "333d5cf6dff47170",
        "name": "",
        "label": "Nº de datos",
        "tooltip": "",
        "group": "b5a6df43101c1b3d",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic.num_datos",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 170,
        "y": 1380,
        "wires": [
            [
                "d77afbf155fbf69d"
            ]
        ]
    },
    {
        "id": "d77afbf155fbf69d",
        "type": "change",
        "z": "d1ca688cf58850b4",
        "g": "333d5cf6dff47170",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "num_datos",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1380,
        "wires": [
            [
                "f1aaa76d45a7a187"
            ]
        ]
    },
    {
        "id": "57e81b2b0809183a",
        "type": "ui_numeric",
        "z": "d1ca688cf58850b4",
        "g": "333d5cf6dff47170",
        "name": "",
        "label": "Temperatura de corte",
        "tooltip": "",
        "group": "b5a6df43101c1b3d",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "-10",
        "max": "60",
        "step": 1,
        "className": "",
        "x": 140,
        "y": 1420,
        "wires": [
            [
                "99b6073ac237990b"
            ]
        ]
    },
    {
        "id": "99b6073ac237990b",
        "type": "change",
        "z": "d1ca688cf58850b4",
        "g": "333d5cf6dff47170",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Tcorte",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1420,
        "wires": [
            [
                "f1aaa76d45a7a187"
            ]
        ]
    },
    {
        "id": "1bf13674a5deafa2",
        "type": "ui_button",
        "z": "d1ca688cf58850b4",
        "g": "7a2c2e4330a7a77a",
        "name": "",
        "group": "be165c6094b73de4",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Actualiza Fota",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 240,
        "y": 1180,
        "wires": [
            [
                "4f7e94edd657c821"
            ]
        ]
    },
    {
        "id": "a7cbe833abb5f6b5",
        "type": "inject",
        "z": "d1ca688cf58850b4",
        "g": "6cfb388fa7edc74f",
        "name": "Borrar todos los datos",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "limit",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ }",
        "payloadType": "json",
        "x": 1020,
        "y": 1500,
        "wires": [
            [
                "f14f3993210df281"
            ]
        ]
    },
    {
        "id": "97a2d70ea19669d5",
        "type": "comment",
        "z": "d1ca688cf58850b4",
        "name": "nuevo id de la placa: D85054",
        "info": "",
        "x": 160,
        "y": 40,
        "wires": []
    },
    {
        "id": "1e8d10c771f483ec",
        "type": "ui_slider",
        "z": "d1ca688cf58850b4",
        "g": "7a2c2e4330a7a77a",
        "name": "",
        "label": "Velocidad de envio de mensjaes (s)",
        "tooltip": "",
        "group": "ba0cb1f8909d0360",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "10",
        "max": "900",
        "step": 1,
        "className": "",
        "x": 180,
        "y": 1020,
        "wires": [
            [
                "d6c000c39ba6a37d"
            ]
        ]
    },
    {
        "id": "fe6d4e71dc4fc136",
        "type": "function",
        "z": "d1ca688cf58850b4",
        "g": "7a2c2e4330a7a77a",
        "name": "function 9",
        "func": "// Parámetros de entrada\nlet envio = flow.get(\"enviar\"); // Se espera que msg.payload sea el nivel de brillo\nlet ota = flow.get(\"fota\");\nlet led = flow.get(\"rgb\");\nlet mySwitch = flow.get(\"switch\");\n\nlet chipId = \"esp32c3-D85054\"; // Ajusta esto al ID real de tu dispositivo\nlet id = msg.id || null; // Opcional: se puede enviar un identificador como parte de msg.id\n\n// Creamos el mensaje\nlet mensaje = {\n    envia: envio, actualiza: ota, velocidad: led, SWITCH: mySwitch\n};\n\n// Añadimos el ID si está disponible\nif (id) {\n    mensaje.id = id;\n}\n\n// Establecemos el nuevo mensaje para publicarlo en el topic requerido\nmsg.topic = `IIX/${chipId}/config`;\nmsg.payload = mensaje;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1080,
        "wires": [
            [
                "84fdd3222dfae083",
                "2c6b03a8aae336a2",
                "0f643b56afcb1219"
            ]
        ]
    },
    {
        "id": "d6c000c39ba6a37d",
        "type": "change",
        "z": "d1ca688cf58850b4",
        "g": "7a2c2e4330a7a77a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enviar",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 1020,
        "wires": [
            [
                "fe6d4e71dc4fc136"
            ]
        ]
    },
    {
        "id": "b20b5669c923d740",
        "type": "ui_slider",
        "z": "d1ca688cf58850b4",
        "g": "7a2c2e4330a7a77a",
        "name": "",
        "label": "Comprueba Fota (min)",
        "tooltip": "",
        "group": "ba0cb1f8909d0360",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "0",
        "max": "1440",
        "step": 1,
        "className": "",
        "x": 220,
        "y": 1060,
        "wires": [
            [
                "3ea6bf1e0fd46b4e"
            ]
        ]
    },
    {
        "id": "46d79c770ed5dc12",
        "type": "ui_slider",
        "z": "d1ca688cf58850b4",
        "g": "7a2c2e4330a7a77a",
        "name": "",
        "label": "Velocidad RGB (ms para 1%)",
        "tooltip": "",
        "group": "ba0cb1f8909d0360",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "1",
        "max": "200",
        "step": 1,
        "className": "",
        "x": 200,
        "y": 1100,
        "wires": [
            [
                "1ddb6e485a502963"
            ]
        ]
    },
    {
        "id": "2c6b03a8aae336a2",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "g": "7a2c2e4330a7a77a",
        "name": "debug 81",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 1140,
        "wires": []
    },
    {
        "id": "3ea6bf1e0fd46b4e",
        "type": "change",
        "z": "d1ca688cf58850b4",
        "g": "7a2c2e4330a7a77a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "fota",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 1060,
        "wires": [
            [
                "fe6d4e71dc4fc136"
            ]
        ]
    },
    {
        "id": "1ddb6e485a502963",
        "type": "change",
        "z": "d1ca688cf58850b4",
        "g": "7a2c2e4330a7a77a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rgb",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 1100,
        "wires": [
            [
                "fe6d4e71dc4fc136"
            ]
        ]
    },
    {
        "id": "6eb8199d7d256d9f",
        "type": "ui_switch",
        "z": "d1ca688cf58850b4",
        "g": "7a2c2e4330a7a77a",
        "name": "",
        "label": "SWITCH GPIO5",
        "tooltip": "",
        "group": "ba0cb1f8909d0360",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 240,
        "y": 1140,
        "wires": [
            [
                "5c99e88bdd6cc06e"
            ]
        ]
    },
    {
        "id": "5c99e88bdd6cc06e",
        "type": "change",
        "z": "d1ca688cf58850b4",
        "g": "7a2c2e4330a7a77a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "switch",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 1140,
        "wires": [
            [
                "fe6d4e71dc4fc136"
            ]
        ]
    },
    {
        "id": "8554eb52c2e9a99c",
        "type": "mongodb in",
        "z": "d1ca688cf58850b4",
        "g": "8ad73ad08aeca1a7",
        "mongodb": "ef32da8a5b070e31",
        "name": "",
        "collection": "log",
        "operation": "find",
        "x": 1060,
        "y": 160,
        "wires": [
            [
                "c5e6ad3cdae36552"
            ]
        ]
    },
    {
        "id": "96a426cfbfb0fba4",
        "type": "inject",
        "z": "d1ca688cf58850b4",
        "g": "8ad73ad08aeca1a7",
        "name": "Ver Todo",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "limit",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ }",
        "payloadType": "json",
        "x": 780,
        "y": 160,
        "wires": [
            [
                "8554eb52c2e9a99c"
            ]
        ]
    },
    {
        "id": "c5e6ad3cdae36552",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "g": "8ad73ad08aeca1a7",
        "name": "debug 82",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 160,
        "wires": []
    },
    {
        "id": "05f27ef6d3d12291",
        "type": "function",
        "z": "d1ca688cf58850b4",
        "g": "8ad73ad08aeca1a7",
        "name": "+ fecha",
        "func": "msg.date = new Date();\n\n// FORMAT DATE\nmsg.date = new Date();\n\n// Extract date components\nlet day = String(msg.date.getDate()).padStart(2, '0');\nlet month = String(msg.date.getMonth() + 1).padStart(2, '0'); // Months are zero-based\nlet year = msg.date.getFullYear();\n\n// Extract time components\nlet hours = String(msg.date.getHours()).padStart(2, '0');\nlet minutes = String(msg.date.getMinutes()).padStart(2, '0');\nlet seconds = String(msg.date.getSeconds()).padStart(2, '0');\n\n// Extract timezone offset in hours\nlet timezoneOffset = -msg.date.getTimezoneOffset(); // in minutes\nlet tzHours = Math.floor(timezoneOffset / 60);\nlet tzSign = tzHours >= 0 ? '+' : '-';\n\n// Format the string\nlet dateString = `${day}.${month}.${year} ${hours}:${minutes}:${seconds} GMT${tzSign}${Math.abs(tzHours)}`;\n\nmsg.payload = \"[\" + dateString + \"]: \" + msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 220,
        "wires": [
            [
                "e1882296b87be27b"
            ]
        ]
    },
    {
        "id": "e1882296b87be27b",
        "type": "mongodb out",
        "z": "d1ca688cf58850b4",
        "g": "8ad73ad08aeca1a7",
        "mongodb": "ef32da8a5b070e31",
        "name": "",
        "collection": "log",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 1360,
        "y": 220,
        "wires": []
    },
    {
        "id": "f36c3800ecb041a3",
        "type": "mqtt in",
        "z": "d1ca688cf58850b4",
        "g": "8ad73ad08aeca1a7",
        "name": "Log",
        "topic": "II16/esp32c3-000110/log",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "dcc291bb801e1410",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 790,
        "y": 220,
        "wires": [
            [
                "05f27ef6d3d12291",
                "08e1b2c790be97fb"
            ]
        ]
    },
    {
        "id": "0f643b56afcb1219",
        "type": "link out",
        "z": "d1ca688cf58850b4",
        "g": "7a2c2e4330a7a77a",
        "name": "config",
        "mode": "link",
        "links": [],
        "x": 775,
        "y": 1040,
        "wires": []
    },
    {
        "id": "fc281e09824d65c3",
        "type": "function",
        "z": "d1ca688cf58850b4",
        "g": "c661b03f42e73e98",
        "name": "LED Brillo",
        "func": "// Parámetros de entrada\nlet brillo = msg.payload; // Se espera que msg.payload sea el nivel de brillo\nlet chipId = \"esp32c3-D85054\"; // Ajusta esto al ID real de tu dispositivo\nlet id = msg.id || null; // Opcional: se puede enviar un identificador como parte de msg.id\nlet msgOrigin = \"no definido\";\n\nif (msg.origin == \"Telegram\"){\n    msgOrigin = \"Telegram\";\n}\nelse{\n    msgOrigin = \"Node-RED\";\n}\n\n// Creamos el mensaje\nlet mensaje = {\n    level: brillo,\n    origin: msgOrigin\n};\n\n// Añadimos el ID si está disponible\nif (id) {\n    mensaje.id = id;\n}\n\n// Establecemos el nuevo mensaje para publicarlo en el topic requerido\nmsg.topic = `IIX/${chipId}/led/brillo`;\nmsg.payload = mensaje;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 520,
        "wires": [
            [
                "449ffee70916169b",
                "76c044d54d165bba"
            ]
        ]
    },
    {
        "id": "4b867ab522b2d670",
        "type": "function",
        "z": "d1ca688cf58850b4",
        "g": "79813c37677002c7",
        "name": "mensaje bienvenida",
        "func": "if(msg.payload.content.substring(0,1)!=\"/\")\n{\n msg.payload.content=\"Hola soy el bot del Grupo 16 de Informática Industrial. Puedo responderte a estos comandos:\\n/start\\n/Apaga_LED\\n/Enciende_LED\\n/Brillo\";\n return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 740,
        "wires": [
            [
                "eb393fa880ee4792",
                "d2a2b692abfdea21"
            ]
        ]
    },
    {
        "id": "4953addc43e0b8fc",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "g": "79813c37677002c7",
        "name": "debug 75",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 700,
        "wires": []
    },
    {
        "id": "d2a2b692abfdea21",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "g": "79813c37677002c7",
        "name": "debug 76",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 700,
        "wires": []
    },
    {
        "id": "2ca1df47a53fc668",
        "type": "function",
        "z": "d1ca688cf58850b4",
        "g": "79813c37677002c7",
        "name": "Apagar",
        "func": "msg.mensaje=msg.payload;\n\nmsg.payload= { \"level\":0 }\n\n\n/*msg.payload=msg.mensaje;\nmsg.payload.content=\"La temperatura es de \"+temp+\"ºC\\n\";\nmsg.payload.content+=\"Última actualización: \"+fecha.toLocaleString('es-ES', { timeZone: 'Europe/Madrid', hour12: false });*/\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 800,
        "wires": [
            [
                "13e1bd8ceb772bd4",
                "6798e22ab60c9090"
            ]
        ]
    },
    {
        "id": "13e1bd8ceb772bd4",
        "type": "link out",
        "z": "d1ca688cf58850b4",
        "g": "79813c37677002c7",
        "name": "Apaga LED",
        "mode": "link",
        "links": [
            "ab8ddecb7ce67b86"
        ],
        "x": 1185,
        "y": 820,
        "wires": []
    },
    {
        "id": "8d5eac6466b3dda3",
        "type": "function",
        "z": "d1ca688cf58850b4",
        "g": "79813c37677002c7",
        "name": "Encender",
        "func": "msg.mensaje=msg.payload;\n\nmsg.payload= { \"level\":1 }\n\n\n/*msg.payload=msg.mensaje;\nmsg.payload.content=\"La temperatura es de \"+temp+\"ºC\\n\";\nmsg.payload.content+=\"Última actualización: \"+fecha.toLocaleString('es-ES', { timeZone: 'Europe/Madrid', hour12: false });*/\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 840,
        "wires": [
            [
                "13e1bd8ceb772bd4",
                "6798e22ab60c9090"
            ]
        ]
    },
    {
        "id": "96f9a74eeff676b3",
        "type": "function",
        "z": "d1ca688cf58850b4",
        "g": "79813c37677002c7",
        "name": "Pregunta Brillo",
        "func": "let message = msg.payload.content;\nlet value = message.substring(1);\nlet brightness = parseInt(value, 10);\n\nmsg.payload = brightness;\nmsg.origin = \"Telegram\";\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 880,
        "wires": [
            [
                "321c9d3546d27168",
                "9778ef0b9aef8df6"
            ]
        ]
    },
    {
        "id": "321c9d3546d27168",
        "type": "link out",
        "z": "d1ca688cf58850b4",
        "g": "79813c37677002c7",
        "name": "Brillo LED",
        "mode": "link",
        "links": [
            "eeaeba3de37051ac"
        ],
        "x": 1225,
        "y": 920,
        "wires": []
    },
    {
        "id": "a6a1e3d1b326d211",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "g": "79813c37677002c7",
        "name": "debug 77",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 920,
        "wires": []
    },
    {
        "id": "9778ef0b9aef8df6",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "g": "79813c37677002c7",
        "name": "debug 78",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 880,
        "wires": []
    },
    {
        "id": "9647b42c7747add6",
        "type": "telegram receiver",
        "z": "d1ca688cf58850b4",
        "g": "79813c37677002c7",
        "name": "",
        "bot": "e2e809aeef1c8de1",
        "saveDataDir": "",
        "filterCommands": true,
        "x": 870,
        "y": 700,
        "wires": [
            [
                "4b867ab522b2d670"
            ],
            []
        ]
    },
    {
        "id": "2b910d102213c249",
        "type": "telegram command",
        "z": "d1ca688cf58850b4",
        "g": "79813c37677002c7",
        "name": "",
        "command": "/start",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "e2e809aeef1c8de1",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 910,
        "y": 740,
        "wires": [
            [
                "4b867ab522b2d670",
                "4953addc43e0b8fc"
            ],
            []
        ]
    },
    {
        "id": "947b251e14b7b21b",
        "type": "telegram command",
        "z": "d1ca688cf58850b4",
        "g": "79813c37677002c7",
        "name": "",
        "command": "/Apaga_LED",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "e2e809aeef1c8de1",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 890,
        "y": 800,
        "wires": [
            [
                "2ca1df47a53fc668"
            ],
            []
        ]
    },
    {
        "id": "620acf66b36e891d",
        "type": "telegram command",
        "z": "d1ca688cf58850b4",
        "g": "79813c37677002c7",
        "name": "",
        "command": "/Enciende_LED",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "e2e809aeef1c8de1",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 880,
        "y": 840,
        "wires": [
            [
                "8d5eac6466b3dda3"
            ],
            []
        ]
    },
    {
        "id": "20c066a7531a84aa",
        "type": "telegram command",
        "z": "d1ca688cf58850b4",
        "g": "79813c37677002c7",
        "name": "",
        "command": "/Brillo",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "e2e809aeef1c8de1",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 910,
        "y": 900,
        "wires": [
            [
                "96f9a74eeff676b3",
                "a6a1e3d1b326d211"
            ],
            []
        ]
    },
    {
        "id": "eb393fa880ee4792",
        "type": "telegram sender",
        "z": "d1ca688cf58850b4",
        "g": "79813c37677002c7",
        "name": "",
        "bot": "e2e809aeef1c8de1",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1370,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "6798e22ab60c9090",
        "type": "telegram sender",
        "z": "d1ca688cf58850b4",
        "g": "79813c37677002c7",
        "name": "LED On/Off",
        "bot": "e2e809aeef1c8de1",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1350,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "740f33c7add8fa47",
        "type": "inject",
        "z": "d1ca688cf58850b4",
        "g": "80810b208c0a8a6c",
        "name": "Ver todos los datos",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "limit",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ }",
        "payloadType": "json",
        "x": 230,
        "y": 1500,
        "wires": [
            [
                "349e6585a8f096ef"
            ]
        ]
    },
    {
        "id": "349e6585a8f096ef",
        "type": "mongodb in",
        "z": "d1ca688cf58850b4",
        "g": "80810b208c0a8a6c",
        "mongodb": "ef32da8a5b070e31",
        "name": "",
        "collection": "datos_json",
        "operation": "find",
        "x": 490,
        "y": 1500,
        "wires": [
            [
                "6b776a0d23432fd0"
            ]
        ]
    },
    {
        "id": "6b776a0d23432fd0",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "g": "80810b208c0a8a6c",
        "name": "debug 83",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 1500,
        "wires": []
    },
    {
        "id": "f14f3993210df281",
        "type": "mongodb out",
        "z": "d1ca688cf58850b4",
        "g": "6cfb388fa7edc74f",
        "mongodb": "ef32da8a5b070e31",
        "name": "",
        "collection": "datos_json",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1290,
        "y": 1500,
        "wires": []
    },
    {
        "id": "662761b652ab1d70",
        "type": "mongodb out",
        "z": "d1ca688cf58850b4",
        "g": "8ad73ad08aeca1a7",
        "mongodb": "ef32da8a5b070e31",
        "name": "",
        "collection": "log",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1360,
        "y": 280,
        "wires": []
    },
    {
        "id": "71b0b66aec5eeb23",
        "type": "inject",
        "z": "d1ca688cf58850b4",
        "g": "8ad73ad08aeca1a7",
        "name": "Borrar Todo",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "limit",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ }",
        "payloadType": "json",
        "x": 770,
        "y": 280,
        "wires": [
            [
                "662761b652ab1d70"
            ]
        ]
    },
    {
        "id": "c0cf8c94ebc7a3ee",
        "type": "comment",
        "z": "d1ca688cf58850b4",
        "name": "Otro posible id marcado: D9D878",
        "info": "",
        "x": 170,
        "y": 80,
        "wires": []
    },
    {
        "id": "10cd2ebb87e92530",
        "type": "http response",
        "z": "d1ca688cf58850b4",
        "g": "15754261d416c520",
        "name": "",
        "statusCode": "",
        "headers": {
            "Content-Disposition": "attachment; filename=registros.csv"
        },
        "x": 1370,
        "y": 1740,
        "wires": []
    },
    {
        "id": "2c8664ea9aaec88c",
        "type": "function",
        "z": "d1ca688cf58850b4",
        "g": "15754261d416c520",
        "name": "Unicode y separador",
        "func": "//add Unicode BOM character (byte order mark) to make EXCEL knows this is UTF-8\nif(global.get(\"separador_decimal\")==\"punto\")\n{\n    msg.payload='\\ufeff'+msg.payload;\n\n}\nelse\n{\n    msg.payload='\\ufeff'+(msg.payload).replace(/\\./g,\",\");\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1740,
        "wires": [
            [
                "10cd2ebb87e92530"
            ]
        ]
    },
    {
        "id": "1d5c25664fbfbd57",
        "type": "function",
        "z": "d1ca688cf58850b4",
        "g": "15754261d416c520",
        "name": "consulta",
        "func": "// fecha por defecto es hoy\nvar ahora = new Date();\n// pillo los globales si los hay, si no la fecha de hoy\nvar desde = new Date(global.get(\"desde\") || ahora);\nvar hasta = new Date(global.get(\"hasta\") || ahora); \n// el día de inicio desde las cero horas\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),0,0,0,0);\n// el día final es hasta final del día\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),23,59,59,999);\n\nmsg.payload= { };\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1740,
        "wires": [
            [
                "3ea4f1f0fc0bdab2"
            ]
        ]
    },
    {
        "id": "119f9b6574837a75",
        "type": "http in",
        "z": "d1ca688cf58850b4",
        "g": "15754261d416c520",
        "name": "",
        "url": "/registros",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1740,
        "wires": [
            [
                "1d5c25664fbfbd57"
            ]
        ]
    },
    {
        "id": "43d100ec9bd94a1e",
        "type": "ui_template",
        "z": "d1ca688cf58850b4",
        "g": "15754261d416c520",
        "group": "9cb3afe23639a28c",
        "name": "",
        "order": 7,
        "width": "0",
        "height": "0",
        "format": "<style>\n.button {\n    text-align: center;\n    font: bold 17px Arial;\n    text-decoration: none;\n    background-color: #339966;\n    color: white;\n    padding: 8px 10px;\n    border: 2px solid #CCCCCC;\n  }\n  \n  .button:hover\n  {\n   background-color: #26734d;\n  }\n\n</style>\n<a href=\"/registros\" class=\"button\">Descarga registros en CSV (EXCEL)</a>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 260,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "3ea4f1f0fc0bdab2",
        "type": "mongodb in",
        "z": "d1ca688cf58850b4",
        "g": "15754261d416c520",
        "mongodb": "ef32da8a5b070e31",
        "name": "",
        "collection": "log",
        "operation": "find",
        "x": 580,
        "y": 1740,
        "wires": [
            [
                "c9bd5979de07efa0"
            ]
        ]
    },
    {
        "id": "c9bd5979de07efa0",
        "type": "csv",
        "z": "d1ca688cf58850b4",
        "g": "15754261d416c520",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "all",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "payload",
        "skip": 0,
        "strings": false,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 790,
        "y": 1740,
        "wires": [
            [
                "2c8664ea9aaec88c",
                "57151b866d8f97b2"
            ]
        ]
    },
    {
        "id": "931f64ad4963c5bd",
        "type": "ui_date_picker",
        "z": "d1ca688cf58850b4",
        "g": "a14b4ad69ce264a1",
        "name": "",
        "label": "Fecha inicio",
        "group": "9cb3afe23639a28c",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 670,
        "y": 1980,
        "wires": [
            [
                "11e8582dc7c066da"
            ]
        ]
    },
    {
        "id": "7320317624b83896",
        "type": "ui_date_picker",
        "z": "d1ca688cf58850b4",
        "g": "a14b4ad69ce264a1",
        "name": "",
        "label": "Fecha final",
        "group": "9cb3afe23639a28c",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 670,
        "y": 2020,
        "wires": [
            [
                "ed837ed14a4a351b"
            ]
        ]
    },
    {
        "id": "11e8582dc7c066da",
        "type": "change",
        "z": "d1ca688cf58850b4",
        "g": "a14b4ad69ce264a1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "desde",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "ed837ed14a4a351b",
        "type": "change",
        "z": "d1ca688cf58850b4",
        "g": "a14b4ad69ce264a1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hasta",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "a34cba8a2d0ebc7b",
        "type": "inject",
        "z": "d1ca688cf58850b4",
        "g": "a14b4ad69ce264a1",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 460,
        "y": 2000,
        "wires": [
            [
                "931f64ad4963c5bd",
                "7320317624b83896"
            ]
        ]
    },
    {
        "id": "57151b866d8f97b2",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "g": "15754261d416c520",
        "name": "debug 88",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 1680,
        "wires": []
    },
    {
        "id": "71c782a16ccd4ed6",
        "type": "http response",
        "z": "d1ca688cf58850b4",
        "g": "a14b4ad69ce264a1",
        "name": "",
        "statusCode": "",
        "headers": {
            "Content-Disposition": "attachment; filename=datos.csv"
        },
        "x": 1370,
        "y": 1900,
        "wires": []
    },
    {
        "id": "70eac1fd53d50c90",
        "type": "function",
        "z": "d1ca688cf58850b4",
        "g": "a14b4ad69ce264a1",
        "name": "Unicode y separador",
        "func": "//add Unicode BOM character (byte order mark) to make EXCEL knows this is UTF-8\nif(global.get(\"separador_decimal\")==\"punto\")\n{\n    msg.payload='\\ufeff'+msg.payload;\n\n}\nelse\n{\n    msg.payload='\\ufeff'+(msg.payload).replace(/\\./g,\",\");\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1900,
        "wires": [
            [
                "71c782a16ccd4ed6"
            ]
        ]
    },
    {
        "id": "efe187885417bcb5",
        "type": "function",
        "z": "d1ca688cf58850b4",
        "g": "a14b4ad69ce264a1",
        "name": "consulta",
        "func": "// fecha por defecto es hoy\nvar ahora = new Date();\n// pillo los globales si los hay, si no la fecha de hoy\nvar desde = new Date(global.get(\"desde\") || ahora);\nvar hasta = new Date(global.get(\"hasta\") || ahora); \n// el día de inicio desde las cero horas\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),0,0,0,0);\n// el día final es hasta final del día\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),23,59,59,999);\n\nmsg.payload=\n[\n    { \"$match\": { \"date\": { \"$gte\": inicio , \"$lte\": final } } },\n    { \"$project\": {\n        \"_id\": 0,\n        \"date\": 1,\n        \"temperatura\": \"$DHT11.temp\",\n        \"humedad\": \"$DHT11.hum\",\n        }\n    },\n    { \"$sort\": {\"date\": 1} }\n];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1900,
        "wires": [
            [
                "bc42d73a9adcbaf5",
                "2a0401cf044ff0a6"
            ]
        ]
    },
    {
        "id": "329eaff4ef73e44c",
        "type": "http in",
        "z": "d1ca688cf58850b4",
        "g": "a14b4ad69ce264a1",
        "name": "",
        "url": "/datos",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1900,
        "wires": [
            [
                "efe187885417bcb5"
            ]
        ]
    },
    {
        "id": "52307084da199889",
        "type": "ui_template",
        "z": "d1ca688cf58850b4",
        "g": "a14b4ad69ce264a1",
        "group": "9cb3afe23639a28c",
        "name": "Descarga datos",
        "order": 4,
        "width": "0",
        "height": "0",
        "format": "<style>\n.button {\n    text-align: center;\n    font: bold 17px Arial;\n    text-decoration: none;\n    background-color: #339966;\n    color: white;\n    padding: 8px 10px;\n    border: 2px solid #CCCCCC;\n  }\n  \n  .button:hover\n  {\n   background-color: #26734d;\n  }\n\n</style>\n<a href=\"/datos\" class=\"button\">Descarga datos en CSV (EXCEL)</a>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 180,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "bc42d73a9adcbaf5",
        "type": "mongodb in",
        "z": "d1ca688cf58850b4",
        "g": "a14b4ad69ce264a1",
        "mongodb": "ef32da8a5b070e31",
        "name": "",
        "collection": "datos_json",
        "operation": "aggregate",
        "x": 570,
        "y": 1900,
        "wires": [
            [
                "d1f0798365882ce4",
                "19fea77950728ae9"
            ]
        ]
    },
    {
        "id": "d1f0798365882ce4",
        "type": "csv",
        "z": "d1ca688cf58850b4",
        "g": "a14b4ad69ce264a1",
        "name": "",
        "sep": ";",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "date, temperatura, humedad",
        "skip": 0,
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 830,
        "y": 1900,
        "wires": [
            [
                "70eac1fd53d50c90"
            ]
        ]
    },
    {
        "id": "19fea77950728ae9",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "g": "a14b4ad69ce264a1",
        "name": "debug 89",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 1840,
        "wires": []
    },
    {
        "id": "2a0401cf044ff0a6",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "g": "a14b4ad69ce264a1",
        "name": "debug 90",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1840,
        "wires": []
    },
    {
        "id": "0557306dc0fead33",
        "type": "comment",
        "z": "d1ca688cf58850b4",
        "name": "WOKWI ID: 000110",
        "info": "",
        "x": 390,
        "y": 40,
        "wires": []
    },
    {
        "id": "08e1b2c790be97fb",
        "type": "debug",
        "z": "d1ca688cf58850b4",
        "name": "debug 91",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 80,
        "wires": []
    },
    {
        "id": "1aa5e38bfa6fc8f8",
        "type": "change",
        "z": "d1ca688cf58850b4",
        "g": "bd833be383cd4eee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "level",
                "pt": "flow",
                "to": "payload.level",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 1100,
        "wires": [
            [
                "8847f0696f2f0422"
            ]
        ]
    },
    {
        "id": "dcc291bb801e1410",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "9e8a9cec0b15cf59",
        "type": "ui_group",
        "name": "LEDs",
        "tab": "d113dcdfb76a6f28",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9cb3afe23639a28c",
        "type": "ui_group",
        "name": "Datos",
        "tab": "d113dcdfb76a6f28",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "be165c6094b73de4",
        "type": "ui_group",
        "name": "Wifi",
        "tab": "d113dcdfb76a6f28",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ef32da8a5b070e31",
        "type": "mongodb",
        "hostname": "iot.ac.uma.es",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "II16",
        "name": ""
    },
    {
        "id": "b5a6df43101c1b3d",
        "type": "ui_group",
        "name": "Historial de datos",
        "tab": "d113dcdfb76a6f28",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ba0cb1f8909d0360",
        "type": "ui_group",
        "name": "Cofiguracion",
        "tab": "d113dcdfb76a6f28",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e2e809aeef1c8de1",
        "type": "telegram bot",
        "botname": "Grupo16bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "testenvironment": false,
        "updatemode": "polling",
        "addressfamily": "",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "d113dcdfb76a6f28",
        "type": "ui_tab",
        "name": "Proyecto",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]